<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-13T18:24:32 IST" name="Suite" finished-at="2025-01-13T18:25:17 IST" duration-ms="44114">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidations.LoginErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" name="LoginErrorValidation" class="ravinduheshan99.tests.ErrorValidations"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="StandAloneTestModified.placeOrder(java.util.HashMap)[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" name="placeOrder" class="ravinduheshan99.tests.StandAloneTestModified"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-01-13T18:24:32 IST" name="ErrorValidations" finished-at="2025-01-13T18:25:09 IST" duration-ms="36991">
      <class name="ravinduheshan99.tests.ErrorValidations">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:33 IST" name="launchApplication" finished-at="2025-01-13T18:24:44 IST" duration-ms="11959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:44 IST" name="LoginErrorValidation" finished-at="2025-01-13T18:24:48 IST" duration-ms="3031" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ravinduheshan99.tests.ErrorValidations.LoginErrorValidation(ErrorValidations.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:48 IST" name="tearDown" finished-at="2025-01-13T18:24:48 IST" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:48 IST" name="launchApplication" finished-at="2025-01-13T18:24:54 IST" duration-ms="5928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:54 IST" name="LoginErrorValidation" finished-at="2025-01-13T18:24:56 IST" duration-ms="2181" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ravinduheshan99.tests.ErrorValidations.LoginErrorValidation(ErrorValidations.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:57 IST" name="tearDown" finished-at="2025-01-13T18:24:58 IST" duration-ms="976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:24:58 IST" name="launchApplication" finished-at="2025-01-13T18:25:06 IST" duration-ms="7574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:25:06 IST" name="ProductErrorValidation" finished-at="2025-01-13T18:25:09 IST" duration-ms="3557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T18:25:09 IST" name="tearDown" finished-at="2025-01-13T18:25:09 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ravinduheshan99.tests.ErrorValidations -->
    </test> <!-- ErrorValidations -->
    <test started-at="2025-01-13T18:24:32 IST" name="StandAloneTestModified" finished-at="2025-01-13T18:25:17 IST" duration-ms="44114">
      <class name="ravinduheshan99.tests.StandAloneTestModified">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:24:33 IST" name="launchApplication" finished-at="2025-01-13T18:24:44 IST" duration-ms="11420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="placeOrder(java.util.HashMap)[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:24:44 IST" name="placeOrder" data-provider="getData" finished-at="2025-01-13T18:24:53 IST" duration-ms="8185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=test@123, email=test@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:24:53 IST" name="tearDown" finished-at="2025-01-13T18:24:53 IST" duration-ms="410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:24:53 IST" name="launchApplication" finished-at="2025-01-13T18:24:59 IST" duration-ms="6476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="placeOrder(java.util.HashMap)[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:24:59 IST" name="placeOrder" data-provider="getData" finished-at="2025-01-13T18:25:08 IST" duration-ms="8821" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Raviya@123, email=raviya@gmail.com, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:25:08 IST" name="tearDown" finished-at="2025-01-13T18:25:09 IST" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:25:09 IST" name="launchApplication" finished-at="2025-01-13T18:25:15 IST" duration-ms="5814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:25:15 IST" name="OrderHistoryTest" finished-at="2025-01-13T18:25:16 IST" depends-on-methods="ravinduheshan99.tests.StandAloneTestModified.placeOrder" duration-ms="1452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T18:25:16 IST" name="tearDown" finished-at="2025-01-13T18:25:17 IST" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ravinduheshan99.tests.StandAloneTestModified -->
    </test> <!-- StandAloneTestModified -->
  </suite> <!-- Suite -->
</testng-results>
