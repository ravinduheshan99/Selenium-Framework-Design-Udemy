<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-13T13:20:06 IST" name="Suite" finished-at="2025-01-13T13:21:47 IST" duration-ms="101240">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidations.LoginErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" name="LoginErrorValidation" class="ravinduheshan99.tests.ErrorValidations"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="StandAloneTestModified.placeOrder(java.util.HashMap)[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" name="placeOrder" class="ravinduheshan99.tests.StandAloneTestModified"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-01-13T13:20:06 IST" name="StandAloneTestModified" finished-at="2025-01-13T13:21:06 IST" duration-ms="60015">
      <class name="ravinduheshan99.tests.StandAloneTestModified">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:06 IST" name="launchApplication" finished-at="2025-01-13T13:20:21 IST" duration-ms="14314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="placeOrder(java.util.HashMap)[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:21 IST" name="placeOrder" data-provider="getData" finished-at="2025-01-13T13:20:28 IST" duration-ms="7218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=test@123, email=test@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:28 IST" name="tearDown" finished-at="2025-01-13T13:20:29 IST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:29 IST" name="launchApplication" finished-at="2025-01-13T13:20:38 IST" duration-ms="9707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="placeOrder(java.util.HashMap)[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:38 IST" name="placeOrder" data-provider="getData" finished-at="2025-01-13T13:20:50 IST" duration-ms="11225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Raviya@123, email=raviya@gmail.com, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:50 IST" name="tearDown" finished-at="2025-01-13T13:20:50 IST" duration-ms="797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:20:50 IST" name="launchApplication" finished-at="2025-01-13T13:21:00 IST" duration-ms="9825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:21:00 IST" name="OrderHistoryTest" finished-at="2025-01-13T13:21:05 IST" depends-on-methods="ravinduheshan99.tests.StandAloneTestModified.placeOrder" duration-ms="4394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.StandAloneTestModified@2ea6e30c]" started-at="2025-01-13T13:21:05 IST" name="tearDown" finished-at="2025-01-13T13:21:06 IST" duration-ms="1002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ravinduheshan99.tests.StandAloneTestModified -->
    </test> <!-- StandAloneTestModified -->
    <test started-at="2025-01-13T13:21:08 IST" name="ErrorValidations" finished-at="2025-01-13T13:21:47 IST" duration-ms="38900">
      <class name="ravinduheshan99.tests.ErrorValidations">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:08 IST" name="launchApplication" finished-at="2025-01-13T13:21:17 IST" duration-ms="8502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:17 IST" name="LoginErrorValidation" finished-at="2025-01-13T13:21:19 IST" duration-ms="2513" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ravinduheshan99.tests.ErrorValidations.LoginErrorValidation(ErrorValidations.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:19 IST" name="tearDown" finished-at="2025-01-13T13:21:20 IST" duration-ms="1362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:20 IST" name="launchApplication" finished-at="2025-01-13T13:21:28 IST" duration-ms="7368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:28 IST" name="LoginErrorValidation" finished-at="2025-01-13T13:21:30 IST" duration-ms="2393" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at ravinduheshan99.tests.ErrorValidations.LoginErrorValidation(ErrorValidations.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:31 IST" name="tearDown" finished-at="2025-01-13T13:21:32 IST" duration-ms="801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:32 IST" name="launchApplication" finished-at="2025-01-13T13:21:41 IST" duration-ms="8694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:41 IST" name="ProductErrorValidation" finished-at="2025-01-13T13:21:46 IST" duration-ms="5426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ravinduheshan99.tests.ErrorValidations@93cf163]" started-at="2025-01-13T13:21:46 IST" name="tearDown" finished-at="2025-01-13T13:21:47 IST" duration-ms="952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ravinduheshan99.tests.ErrorValidations -->
    </test> <!-- ErrorValidations -->
  </suite> <!-- Suite -->
</testng-results>
